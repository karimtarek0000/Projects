@import "https://fonts.googleapis.com/css?family=Lato:300,400&display=swap";.navbar__box{position:absolute;width:0%;height:100vh;background-color:black;top:0;left:0;z-index:4000;overflow:hidden;will-change:width}.navbar__box__items__super{position:relative;margin-top:20vh;width:100%;height:100vh}.navbar__box__items__super a:link,.navbar__box__items__super a:visited{text-decoration:none;color:white}@media only screen and (max-width: 37.5em){.navbar__box__items__super{margin-top:10vh}}.navbar__box__items__super>li:not(:last-child){margin-bottom:1rem}.navbar__box__item{position:relative;opacity:0;width:300px;padding:0 1rem;border-radius:1rem;-webkit-transition:all 0.5s;-o-transition:all 0.5s;transition:all 0.5s;background-color:rgba(85,21,21,0.3)}@media only screen and (max-width: 56.25em){.navbar__box__item{width:100%;padding:2rem;height:auto}}.navbar__box__item>a{font-size:3rem;text-transform:capitalize;padding:2rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.navbar__box__item>a span{margin-right:2rem}.navbar__box__item>a i{-webkit-transition:all 0.5s;-o-transition:all 0.5s;transition:all 0.5s;-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center}@media only screen and (max-width: 56.25em){.navbar__box__item>a i{-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg)}}@media only screen and (max-width: 56.25em){.navbar__box__item>a{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}}.navbar__box__item:hover{background-color:rgba(85,21,21,0.7)}.navbar__box__item>ul{position:absolute;width:100%;top:0;right:-100%;background-color:#251818;border-radius:1rem;opacity:0;-webkit-transition:all 0.5s;-o-transition:all 0.5s;transition:all 0.5s;text-align:center;display:block;-webkit-box-shadow:0px 5px 5px rgba(36,23,23,0.4);box-shadow:0px 5px 5px rgba(36,23,23,0.4);visibility:hidden;-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease;will-change:height}@media only screen and (max-width: 56.25em){.navbar__box__item>ul{position:static;visibility:visible;opacity:1;overflow:hidden;height:0px}}.navbar__box__item>ul li:not(:last-child){border-bottom:0.5px solid #551515}.navbar__box__item>ul a{display:block;padding:1rem 0;font-size:2rem;text-transform:capitalize;-webkit-transition:all 0.5s;-o-transition:all 0.5s;transition:all 0.5s}@media only screen and (max-width: 56.25em){.navbar__box__item>ul a{font-size:2.7rem}}.navbar__box__item>ul a:hover{background-color:rgba(85,21,21,0.7)}.navbar__box__item:hover>ul{opacity:1;top:2rem;visibility:visible}@media only screen and (hover: none){.navbar__box__item:hover>ul{top:0}}.navbar__toggle{position:relative;overflow:hidden;z-index:9999;-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;-o-appearance:none;appearance:none;border:1px solid transparent;outline:none !important;font-size:2.2rem;color:#000;background-color:rgba(0,0,0,0);padding:0;width:50px;height:40px;text-transform:capitalize;cursor:pointer}@media only screen and (max-width: 37.5em){.navbar__toggle{font-size:3.4rem}}.navbar__toggle__inner{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:100%}.navbar__toggle__open{position:relative}.navbar__toggle__open__icon{position:absolute;height:2px;background-color:white;border-radius:100px;right:5px}.navbar__toggle__open__icon--1{width:70%;top:5px}.navbar__toggle__open__icon--2{width:60%;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.navbar__toggle__open__icon--3{width:50%;bottom:5px}.navbar__toggle__close{position:relative}.navbar__toggle__close__icon{position:absolute;background-color:white;border-radius:100px;height:2px;width:90%;top:50%;left:50%;-webkit-transform:translate(-50%, -50%);-ms-transform:translate(-50%, -50%);transform:translate(-50%, -50%)}*,*::before,*::after{margin:0;padding:0;-webkit-box-sizing:inherit;box-sizing:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box;font-size:62.5%}@media only screen and (max-width: 75em){html{font-size:56.25%}}@media only screen and (max-width: 56.25em){html{font-size:50%}}@media only screen and (max-width: 37.5em){html{font-size:31.25%}}body{overflow-x:hidden;height:100vh;font-family:lato;font-weight:300}.reset-link:link,.reset-link:visited{text-decoration:none;display:block}.display-none{display:none}.uppercase-text{text-transform:uppercase}.capitalize-text{text-transform:capitalize}.lowercase-text{text-transform:lowercase}.text-center{text-align:center}.text-left{text-align:left}.reset-btn{outline:none;border:none;background-color:transparent;cursor:pointer}.home{position:relative;width:100vw;height:100vh;background:url("../assets/img/Background.png") no-repeat;background-size:cover;overflow:hidden}.home::after{content:"";position:absolute;background:url("../assets/img/up.png") no-repeat;background-size:cover;background-position:right top;width:100%;height:100%;top:0;left:0}.home__box{padding-top:2rem}.home__content{position:relative;color:white;z-index:999}.home__info__head,.home__info__subtitle{background-image:-o-linear-gradient(135deg, #b2d6e2, #8994a2, #b2d6e2, #8994a2);background-image:linear-gradient(-45deg, #b2d6e2, #8994a2, #b2d6e2, #8994a2);-webkit-background-clip:text;background-clip:text;color:transparent}.home__info__head{font-size:8rem;font-weight:300}.home__info__subtitle{font-size:5rem}@media only screen and (max-width: 56.25em){.home__info__subtitle{font-size:3.5rem}}.home__info__title{color:#7b8793;font-size:2rem}@media only screen and (max-width: 37.5em){.home__info__title{font-size:2.5rem}}.home__info__action{margin-top:5rem}.home__info__action svg{height:5rem;width:5rem;fill:white;margin-right:2rem}.home__info__action p{color:#7b8793;font-size:1.5rem}@media only screen and (max-width: 37.5em){.home__info__action p{font-size:2.5rem}}.home__info__action__info__content span{font-size:1.3rem}.home__info__action__info__content span:nth-of-type(1){margin-right:10%}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
